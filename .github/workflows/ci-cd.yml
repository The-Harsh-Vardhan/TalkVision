name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test application startup
        run: |
          # Test if the app can start without errors
          timeout 10s uvicorn app:app --host 127.0.0.1 --port 8000 || if [[ $? -eq 124 ]]; then echo "App started successfully"; else exit 1; fi

      - name: Test API endpoints
        run: |
          # Start the server in background
          uvicorn app:app --host 127.0.0.1 --port 8000 &
          SERVER_PID=$!

          # Wait for server to start
          sleep 10

          # Test health endpoint
          curl -f http://127.0.0.1:8000/ || exit 1

          # Test API docs
          curl -f http://127.0.0.1:8000/docs || exit 1

          # Kill the server
          kill $SERVER_PID

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit

      - name: Check for security vulnerabilities
        run: |
          safety check --json
          bandit -r . -f json

  deployment-check:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Verify deployment files
        run: |
          # Check if all required files exist
          test -f Procfile || exit 1
          test -f requirements.txt || exit 1
          test -f runtime.txt || exit 1
          test -f app.py || exit 1

          echo "All deployment files are present ✅"

      - name: Validate Procfile
        run: |
          grep -q "web: uvicorn app:app" Procfile || exit 1
          echo "Procfile is valid ✅"

      - name: Validate requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --dry-run
          echo "Requirements.txt is valid ✅"
